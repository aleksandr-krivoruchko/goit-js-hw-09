{"version":3,"sources":["js/03-promises.js"],"names":["refs","form","document","querySelector","addEventListener","onBtnSubmitCreatePromise","countPromise","e","preventDefault","elements","delay","step","amount","currentTarget","setInterval","qqq","Number","value","createPromise","position","Math","random","console","log"],"mappings":";AACA,MAAMA,EAAO,CACXC,KAAMC,SAASC,cAAc,UAG/BH,EAAKC,KAAKG,iBAAiB,SAAUC,GACrC,IAAIC,EAAe,EAEnB,SAASD,EAAyBE,GAChCA,EAAEC,iBACI,MAACC,UAAS,MAACC,EAAD,KAAQC,EAAR,OAAcC,IAAWL,EAAEM,cAE3CC,YAAY,KACRR,GAAAA,IAAiBM,EACnB,OAEDN,GAAgB,EACZS,IAAAA,EAAM,EACTA,GAAOC,OAAOL,EAAKM,OAErBC,EAAcZ,EAAcS,IAEzBL,EAAMO,OAMX,SAASC,EAAcC,EAAUT,GACTU,KAAKC,SAAW,GAEpCC,QAAQC,2BAA2BJ,QAAeT,OAElDY,QAAQC,0BAA0BJ,QAAeT","file":"03-promises.47ef0f97.js","sourceRoot":"../src","sourcesContent":["\nconst refs = {\n  form: document.querySelector('.form'),\n}\n\nrefs.form.addEventListener('submit', onBtnSubmitCreatePromise);\nlet countPromise = 0;\n\nfunction onBtnSubmitCreatePromise(e) {\n  e.preventDefault();\n  const {elements:{delay, step, amount}} = e.currentTarget;\n\n  setInterval(() => {\n\t  if(countPromise === amount){\n\t\t  return;\n\t  }\n\t  countPromise += 1;\n\t  let qqq = 0;\n\t   qqq += Number(step.value);\n\n  createPromise(countPromise, qqq);\n\n  }, delay.value);\n\n}\n\n\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  } else {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  }\n}\n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n\n"]}